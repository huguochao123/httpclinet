<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shls.db.dao.product.AbsProjectDao">

    <!-- ============================= ResultMap ============================= -->
    <resultMap id="AbsProjectMap" type="com.shls.db.po.AbsProject">
        <result property="id" column="ID"  javaType="java.lang.Long" jdbcType="BIGINT" />
        <result property="serialNumber" column="SERIAL_NUMBER"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="name" column="NAME"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="description" column="DESCRIPTION"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="ccUnitName" column="CC_UNIT_NAME"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="creator" column="CREATOR"  javaType="java.lang.Long" jdbcType="BIGINT" />
        <result property="isDelete" column="IS_DELETE"  javaType="java.lang.Boolean" jdbcType="BIT" />
        <result property="status" column="STATUS"  javaType="java.lang.Integer" jdbcType="INTEGER" />
        <result property="projectManager" column="PROJECT_MANAGER"  javaType="java.lang.Long" jdbcType="BIGINT" />
        <result property="createdAt" column="CREATED_AT"  javaType="java.lang.Long" jdbcType="BIGINT" />
        <result property="updatedAt" column="UPDATED_AT"  javaType="java.lang.Long" jdbcType="BIGINT" />
        <result property="contractIndex" column="CONTRACT_INDEX"  javaType="java.lang.Integer" jdbcType="INTEGER" />
        <result property="projectType" column="PROJECT_TYPE"  javaType="java.lang.String" jdbcType="VARCHAR" />
        <result property="counterparty" column="COUNTERPARTY"  javaType="java.lang.Integer" jdbcType="INTEGER" />
        <result property="factoringInfoId" column="FACTORING_INFO_ID"  javaType="java.lang.Long" jdbcType="BIGINT" />
        <result property="assetMgtPlanId" column="ASSET_MGT_PLAN_ID"  javaType="java.lang.Long" jdbcType="BIGINT" />
    </resultMap>

    <!-- ============================= INSERT ============================= -->
    <insert id="insert" keyProperty="id" >

        <selectKey keyProperty="id" resultType="java.lang.Long" order="BEFORE">
                SELECT ABS_PROJECT_SEQ.NEXTVAL AS id FROM dual
        </selectKey>

        INSERT INTO abs_project( 
                ID,
                SERIAL_NUMBER,
                NAME,
                DESCRIPTION,
                CC_UNIT_NAME,
                CREATOR,
                IS_DELETE,
                STATUS,
                PROJECT_MANAGER,
                CREATED_AT,
                UPDATED_AT,
                CONTRACT_INDEX,
                PROJECT_TYPE,
                COUNTERPARTY,
                FACTORING_INFO_ID,
                ASSET_MGT_PLAN_ID )
        VALUES ( 
                #{id ,jdbcType=BIGINT},
                #{serialNumber ,jdbcType=VARCHAR},
                #{name ,jdbcType=VARCHAR},
                #{description ,jdbcType=VARCHAR},
                #{ccUnitName ,jdbcType=VARCHAR},
                #{creator ,jdbcType=BIGINT},
                #{isDelete ,jdbcType=BIT},
                #{status ,jdbcType=INTEGER},
                #{projectManager ,jdbcType=BIGINT},
                #{createdAt ,jdbcType=BIGINT},
                #{updatedAt ,jdbcType=BIGINT},
                #{contractIndex ,jdbcType=INTEGER},
                #{projectType ,jdbcType=VARCHAR},
                #{counterparty ,jdbcType=INTEGER},
                #{factoringInfoId ,jdbcType=BIGINT},
                #{assetMgtPlanId ,jdbcType=BIGINT})
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="update">
        UPDATE abs_project
        <set>
            SERIAL_NUMBER=#{serialNumber ,jdbcType=VARCHAR},
            NAME=#{name ,jdbcType=VARCHAR},
            DESCRIPTION=#{description ,jdbcType=VARCHAR},
            CC_UNIT_NAME=#{ccUnitName ,jdbcType=VARCHAR},
            CREATOR=#{creator ,jdbcType=BIGINT},
            IS_DELETE=#{isDelete ,jdbcType=BIT},
            STATUS=#{status ,jdbcType=INTEGER},
            PROJECT_MANAGER=#{projectManager ,jdbcType=BIGINT},
            CREATED_AT=#{createdAt ,jdbcType=BIGINT},
            UPDATED_AT=#{updatedAt ,jdbcType=BIGINT},
            CONTRACT_INDEX=#{contractIndex ,jdbcType=INTEGER},
            PROJECT_TYPE=#{projectType ,jdbcType=VARCHAR},
            COUNTERPARTY=#{counterparty ,jdbcType=INTEGER},
            FACTORING_INFO_ID=#{factoringInfoId ,jdbcType=BIGINT},
            ASSET_MGT_PLAN_ID=#{assetMgtPlanId ,jdbcType=BIGINT},
        </set>
        WHERE ID=#{id} 
    </update>

    <update id="updateIgnoreNull">
        UPDATE abs_project
        <set>
            <if test="serialNumber!= null">SERIAL_NUMBER=#{serialNumber},</if>
            <if test="name!= null">NAME=#{name},</if>
            <if test="description!= null">DESCRIPTION=#{description},</if>
            <if test="ccUnitName!= null">CC_UNIT_NAME=#{ccUnitName},</if>
            <if test="creator!= null">CREATOR=#{creator},</if>
            <if test="isDelete!= null">IS_DELETE=#{isDelete},</if>
            <if test="status!= null">STATUS=#{status},</if>
            <if test="projectManager!= null">PROJECT_MANAGER=#{projectManager},</if>
            <if test="createdAt!= null">CREATED_AT=#{createdAt},</if>
            <if test="updatedAt!= null">UPDATED_AT=#{updatedAt},</if>
            <if test="contractIndex!= null">CONTRACT_INDEX=#{contractIndex},</if>
            <if test="projectType!= null">PROJECT_TYPE=#{projectType},</if>
            <if test="counterparty!= null">COUNTERPARTY=#{counterparty},</if>
            <if test="factoringInfoId!= null">FACTORING_INFO_ID=#{factoringInfoId},</if>
            <if test="assetMgtPlanId!= null">ASSET_MGT_PLAN_ID=#{assetMgtPlanId},</if>
        </set>
        WHERE ID=#{id} 
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delete">
        UPDATE abs_project SET IS_DELETE = 1 
        WHERE ID=#{id} 
    </delete>

    <delete id="deleteById">
        UPDATE abs_project SET IS_DELETE = 1 
        WHERE ID=#{id} 
    </delete>

    <delete id="deleteAll">
        UPDATE abs_project SET IS_DELETE = 1 
    </delete>

    <delete id="deleteBy">
        UPDATE abs_project SET IS_DELETE = 1 
        <include refid="whereSql"/> 
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(1) FROM abs_project
        <include refid="whereSql"/>
    </select>

    <select id="findById" resultMap="AbsProjectMap">
        SELECT * FROM abs_project
        WHERE IS_DELETE = 0 AND ID=#{id} 
    </select>

    <select id="find" resultMap="AbsProjectMap">
        SELECT
        <if test="entity.fields == null">*</if>
        <if test="entity.fields != null">
            <foreach collection="entity.fields" item="field" separator=",">
                ${field}
            </foreach>
        </if>
        FROM abs_project
        <include refid="whereSql"/>
        ORDER BY ${entity.orderBy} ${entity.order}
    </select>

    <select id="findByPage" resultMap="AbsProjectMap">
        SELECT * FROM (
            SELECT ROWNUM as rn, t1.* FROM (
                SELECT
                    <if test="entity.fields == null">*</if>
                    <if test="entity.fields != null">
                        <foreach collection="entity.fields" item="field" separator=",">
                            ${field}
                        </foreach>
                    </if>
                FROM abs_project <include refid="whereSql"/>
                ORDER BY ${entity.orderBy} ${entity.order} )t1
            WHERE ROWNUM <![CDATA[<=]]> #{entity.offset} + #{entity.length} )t2
        WHERE t2.rn > #{entity.offset}
    </select>

  <sql id="whereSql">
       <where>
            <if test="entity.eqParams != null">
                <foreach collection="entity.eqParams" item="item">
                    ${item.relation} ${item.key} = #{item.value}
                </foreach>
            </if>

            <if test="entity.neqParams != null">
                <foreach collection="entity.neqParams" item="item">
                    ${item.relation} ${item.key} != #{item.value}
                </foreach>
            </if>

            <if test="entity.gtParams != null">
                <foreach collection="entity.gtParams" item="item">
                    ${item.relation} ${item.key} > #{item.value}
                </foreach>
            </if>

            <if test="entity.ltParams != null">
                <foreach collection="entity.ltParams" item="item">
                    ${item.relation} ${item.key} <![CDATA[<]]> #{item.value}
                </foreach>
            </if>

            <if test="entity.gteParams != null">
                <foreach collection="entity.gteParams" item="item" >
                    ${item.relation} ${item.key} >= #{item.value}
                </foreach>
            </if>

            <if test="entity.lteParams != null">
                <foreach collection="entity.lteParams" item="item" >
                    ${item.relation} ${item.key} <![CDATA[<=]]> #{item.value}
                </foreach>
            </if>

            <if test="entity.likeParams != null">
                <foreach collection="entity.likeParams" item="item" >
                    ${item.relation} LOWER(${item.key}) LIKE LOWER(concat(concat('%',#{item.value}),'%'))
                </foreach>
            </if>

            <if test="entity.isNullParams != null">
                <foreach collection="entity.isNullParams" item="item" >
                    ${item.relation} ${item.key} IS NULL
                </foreach>
            </if>

            <if test="entity.isNotNullParams != null">
                <foreach collection="entity.isNotNullParams" item="item" >
                    ${item.relation} ${item.key} IS NOT NULL
                </foreach>
            </if>

            <if test="entity.inParams != null">
                <foreach collection="entity.inParams" item="item">
                    ${item.relation} ${item.key} IN (
                    <foreach collection="item.value" item="inItem" separator=",">
                        ${inItem}
                    </foreach>)
                </foreach>
            </if>

            <if test="entity.notInParams != null">
                <foreach collection="entity.notInParams" item="item">
                    ${item.relation} ${item.key} NOT IN (
                    <foreach collection="item.value" item="notInItem" separator=",">
                        ${notInItem}
                    </foreach>)
                </foreach>
            </if>

        </where>
    </sql>

<!--自动生成代码结束, 请勿修改以上代码, 也不要删除此行注释-->



</mapper>
